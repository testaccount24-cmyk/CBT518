* From: Perry Winter (PWINTER@UNCMVS.OIT.UNC.EDU)
* Subject: Re: Symbolic parameter substitution
* Newsgroups: bit.listserv.ibm-main
* Date: 1993-10-07 07:56:04 PST
*
* // EXEC ASMXCL,MEM=PUTPARM
* //C.SYSIN  DD  *
*
PUTPARM CSECT                                                       SJK
         SAVE  (14,12)              STANDARD LINKAGE CONVENTION BASE12
         LR    12,15                            |
         USING PUTPARM,12                       |
         LA    3,SAVAREA                        |
         ST    3,8(13)                          |
         ST    13,4(3)                          |
         LR    13,3                             V
START    DS    0H
*
*  THIS PGM WRITES 80 CHARACTER RECORDS BASED ON USER SUPPLIED PARM.
*  ALL SYMBOLICS USED IN PARM ARE EXPANDED BEFORE EXECUTION OF PGM.
*  THE SEMICOLON IS USED AS A RECORD SEPARATOR IN THE PARM THEREFORE
*  SEVERAL 80 CHARACTER RECORDS CAN BE GENERATED FROM ONE 100 CHAR
*  PARM FIELD. THE OUTPUT RECORDS ARE WRITTEN ON DDNAME PARM WHERE
*  THE LRECL IS ALWAYS 80 CHARACTERS.  THE USER CAN SELECT ANY BLOCKING
*  FACTOR ON THE PARM DD CARD.  THE OUTPUT FILE CAN BE CONCATENATED
*  BEFORE OR AFTER ANY 80 CHAR LRECL DATA FILE IN THE JOB STREAM.
* $$$$$$$$$$$$$$$$$$$$
*  WHEN NO PARM IS SUPPLIED PUTPARM WRITES AN EOF MARKER ON PARM DD
*  $$$$$$$$$$$$$$$$$$$$
*  EXAMPLE #1
*
*  //PARMGEN  EXEC PGM=PUTPARM,PARM='THIS IS A SIMPLE PARM'
*  //STEPLIB  DD  DSN=STARTEST.DEV.LOAD,DISP=SHR
*  //PARM  DD  DSN=&&TEMP,UNIT=DISK,DISP=(,PASS),
*  //   DCB=(BLKSIZE=800,RECFM=FB)
*
*  THE FOLLOWING 80 CHARACTER RECORD IS GENERATED BY PUTPARM
*  THE RECORD GENERATED IS DISPLAYED BETWEEN THE GRIDS:-
*  0000+000010000+000020000+000030000+000040000+000050000+000060000+000 00+00008
*  THIS IS A SIMPLE PARM
*  0000+000010000+000020000+000030000+000040000+000050000+000060000+000 00+00008
*
*  EXAMPLE #2
*  THE FOLLOWING JCL ILLUSTRATES USE OF PUTPARM USING THE SEMICOLON
*  IN THE PARM TO CAUSE SEVERAL RECORDS TO BE WRITTEN BUY ONE PARM
*
*  //MYPROC   PROC  A=1709,B=1338
*  //PARMGEN  EXEC PGM=PUTPARM,PARM='ABC  $22.95;DEF;;01234;;&A,&B'
*  //STEPLIB  DD  DSN=STARTEST.DEV.LOAD,DISP=SHR
*  //PARM  DD  DSN=&&TEMP,UNIT=DISK,DISP=(,PASS),
*  //   DCB=(BLKSIZE=800,RECFM=FB)
*
*  THE FOLLOWING 80 CHARACTER RECORDS ARE GENERATED BY PUTPARM
*  ALL SIX RECORDS GENERATED ARE DISPLAYED BETWEEN THE GRIDS:-
*  0000+000010000+000020000+000030000+000040000+000050000+000060000+000 00+00008
*  ABC  $22.95
*  DEF
*
*  01234
*
*  1709,1338
*  0000+000010000+000020000+000030000+000040000+000050000+000060000+000 00+00008
*
*  SEMICOLONS IN THE PARM FORCE RECORDS TO BE WRITTEN AT THAT POINT.
*  ALL RECORDS WRITTEN ARE ALWAYS PADDED WITH BLANKS WHEN LESS THAN
*  80 NON-BLANK CHARACTERS APPEAR BETWEEN THE SEMICOLONS.
*  SEMICOLONS WITHOUT INTERVENING DATA FORCE WRITING OF BLANK RECORDS.
*  NOTE THAT RECORDS THREE AND FIVE ARE BLANK BECAUSE THE DOUBLE
*  SEMICOLON IN THE PARM FORCED THE BLANK RECORD TO BE WRITTEN.
*  SYMBOLIC PARAMETERS &A AND &B ARE RESOLVED BY THE VALUES IN THE
*  PROC STATEMENT AND APPEAR IN THE LAST OF THE SIX RECORDS WRITTEN
*  BY PUTPARM.  ALL OF THE SIX RECORDS CHOSEN BY THIS PARTICULAR
*  PARM HAVE THE AUTOMATIC BLANK PADDING AT THE END OF EACH RECORD.
*
         PRINT ON,NOGEN
         L     R2,0(R1)                POINT R2 TO PARM
         LH    R3,0(R2)                GET PARM LEN IN R3
         LTR   R3,R3                   IS THE PARM LEN ZERO
         BZ    NOPARM                  THEN OPEN/CLOSE AND RETURN
         WTO   'PUTPARM USER PARM FOLLOWS',ROUTCDE=(11)
         BCTR  R3,0                    MINUS ONE FROM PARM LEN FOR EXEC UTED M
         EX    R3,MVC                  EXECUTE THE MOVE TO SAVE PARM
         MVC   WTOPARM+8(100),SAVPARM  SHOW USER HIS PARM
WTOPARM  WTO   '                                                       X
                                                        ',ROUTCDE=(11)
         LA    R3,1(R3)                RESTORE ORIGINAL PARM LEN
         LA    R4,SAVPARM              POINT TO SAVED PARM
         LA    R5,OUTPARM              POINT TO OUTPUT PARM REC
         OPEN  (PARM,OUTPUT)
NEXTCHAR CLI   0(R4),X'5E'             SEMICOLON IS THIS END OF REC     CHAR REC
         BE    NEWREC                  WRITE THIS RECORD
         MVC   0(1,R5),0(R4)           NON END-OF-REC CHAR TO OUTPARMRM
         LA    R4,1(R4)                STEP TO NEXT PARM CHAR
         LA    R5,1(R5)                STEP TO NEXT OUTPARM CHAR
         BCT   R3,NEXTCHAR             MINUS ONE LEN TEST NEXT CHAR
         B     EOJ                     PARM LEN IS ZERO WRITE LAST REC  0 CHARS
NEWREC   PUT   PARM,OUTPARM            FOUND SEMI WRITE RECORD
         MVC   OUTPARM(80),=CL80' '    CLR IT FOR NEXT RECORD
         LA    R4,1(R4)                STEP TO NEXT PARM CHAR
         LA    R5,OUTPARM              POINT TO BEGNNNG OF NEW OUTPARM   NEW REC
         BCT   R3,NEXTCHAR             TEST NEXT CHAR IF ANY
         B     RETURN                  GO BACK - NO MORE CHARS
EOJ      PUT   PARM,OUTPARM            WRITE LAST 80 CHAR PARM REC
RETURN   CLOSE PARM                    CLOSE THE PARM FILE
         L     R13,SAVAREA+4
         RETURN (14,12),RC=0
OUTPARM  DC    CL80' '
NOPARM   OPEN  (PARM,OUTPUT)
         WTO   'NO PARM SUPPLIED - EOF WRITTEN ON PARM DD',ROUTCDE=11
         B     RETURN
PARM     DCB   DDNAME=PARM,DSORG=PS,MACRF=(PM),LRECL=80
MVC      MVC   SAVPARM(1),2(R2)        EXECUTED MOVE
SAVPARM  DC    CL100' '                SAVED USER PARM
SAVAREA  DS    18F                     REG SAVE AREA
         YREGS                                                      SJK
         END   PUTPARM
